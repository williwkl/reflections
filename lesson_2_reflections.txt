What happens when you initialize a repository? Why do you need to do it?
	willi reflections $ git init
	Initialized empty Git repository in C:/Users/willi/version-control/reflections/.git/
	willi (master #) reflections $ git status
	On branch master

	No commits yet

	Untracked files:
	  (use "git add <file>..." to include in what will be committed)

			lesson_1_reflections.txt

	nothing added to commit but untracked files present (use "git add" to track)

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	the "staging area" is already connected with Git whereas the working directory is not

How can you use the staging area to make sure you have one commit per logical
change?
	Use staging area to collect files where the changes belong to a common feature/fix/documentation/styles/refactorisation/configs/...

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	branches help making a parallel development, experiments, language versions, ...

How do the diagrams help you visualize the branch structure?
	They show which commits are reachable (have parents)

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	Bring together features which were developed in different branches

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
	if there are no conflicts it goes very well and quickly
	